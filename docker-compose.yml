services:

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    restart: unless-stopped
    networks:
      - current
    ports:
      - "5432:5432"
    env_file: .env-docker
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    environment:
      POSTGRES_USER: ledger-exp
      POSTGRES_PASSWORD: ledger-exp
      POSTGRES_DB: ledger-exp

  database-migration:
    image: migrate/migrate
    container_name: database-migration
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - current
    volumes:
      - ".:/code"
    env_file: .env-docker
    command: [ "-path", "/code/migrations/", "-database",  "$DATABASE_URL", "up" ]

  redis:
    image: redis:6
    container_name: redis
    restart: unless-stopped
    networks:
      - current
    command: redis-server --save 60 1 --requirepass MDNcVb924a
    ports:
      - '6379:6379'

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: [ "--config=/conf/otel-collector-config.yml", "--log-level=DEBUG" ]
    volumes:
      - ./otel-collector-config.yml:/conf/otel-collector-config.yml
    ports:
      - "9464:9464"
      - "55680:55680"
      - "55681:55681"
    depends_on:
      - jaeger
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - "14268:14268"   # jaeger-collector HTTP server (tracer provider)
      - "14250"
      - "16686:16686"   # HTTP server (browser UI)

  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

networks:
  current:
    name: current
